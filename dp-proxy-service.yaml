server:
  port: 8762
  #  ssl:
  #    key-store: file:/app/cert/dive-planner.p12
  #    key-store-password: ${KEY_STORE_PASSWORD}
  #    key-store-type: PKCS12
  #    key-alias: tomcat
spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay=
#      globalcors:
#        add-to-simple-url-handler-mapping: true
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: "*"
#            allowedHeaders: "*"
#            allowedMethods: "*"

      routes:
        - id: dp-api-service
          uri: lb://DP-API-SERVICE
          predicates:
            - Path=/api/**
#          filters:
#            - StripPrefix=0

#      default-filters:
#        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin, RETAIN_FIRST

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8000/realms/dive-planner
        registration:
          spring-with-test-scope:
            provider: keycloak
            client-id: spring-with-test-scope
            client-secret: IhR232noAqHOVK5lDSyfqN2nVnkOyCY1
            authorization-grant-type: authorization_code
            scope: openid
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8000/realms/dive-planner/protocol/openid-connect/certs

#logging:
#  level:
#    root: INFO
#    org.springframework.web: DEBUG
#    org.springframework.security: INFO
#    org.springframework.data: INFO
#
#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,info,refresh